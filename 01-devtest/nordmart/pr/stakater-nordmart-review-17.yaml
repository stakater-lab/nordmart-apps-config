---
# Source: helm/charts/application/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: stakater-nordmart-review-17
    appVersion: "SNAPSHOT-PR-17-2c43b842"
    group: com.stakater.platform
    provider: stakater
    team: stakater
    chart: "application-0.0.29"
    release: "stakater-nordmart-review"
    heritage: "Helm"
  name: stakater-nordmart-review-17
---
# Source: helm/charts/mongodb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: review-mongodb
  namespace: nordmart-pr
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-10.0.5
    app.kubernetes.io/instance: stakater-nordmart-review
    app.kubernetes.io/managed-by: Helm
secrets:
  - name: review-mongodb
---
# Source: helm/charts/mongodb/templates/standalone/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: review-mongodb
  namespace: nordmart-pr
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-10.0.5
    app.kubernetes.io/instance: stakater-nordmart-review
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: helm/charts/application/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: stakater-nordmart-review-17
    appVersion: "SNAPSHOT-PR-17-2c43b842"
    group: com.stakater.platform
    provider: stakater
    team: stakater
    chart: "application-0.0.29"
    release: "stakater-nordmart-review"
    heritage: "Helm"
  name: stakater-nordmart-review-17
spec:
  selector:
    app: stakater-nordmart-review-17
  ports:
    - name: https
      port: 8080
      targetPort: 8080
---
# Source: helm/charts/mongodb/templates/standalone/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: review-mongodb
  namespace: nordmart-pr
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-10.0.5
    app.kubernetes.io/instance: stakater-nordmart-review
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  type: ClusterIP
  ports:
    - name: mongodb
      port: 27017
      targetPort: mongodb
      nodePort: null
  selector:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: stakater-nordmart-review
    app.kubernetes.io/component: mongodb
---
# Source: helm/charts/application/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: stakater-nordmart-review-17
    appVersion: "SNAPSHOT-PR-17-2c43b842"
    group: com.stakater.platform
    provider: stakater
    team: stakater
    chart: "application-0.0.29"
    release: "stakater-nordmart-review"
    heritage: "Helm"
    appCategory: backend
  annotations: 
    reloader.stakater.com/auto: "true"
  name: stakater-nordmart-review-17
spec:
  replicas: 2
  selector:
    matchLabels:
      app: stakater-nordmart-review-17
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: stakater-nordmart-review-17
    spec:      
      imagePullSecrets:
      - name: nexus-creds
      containers:
      - name: stakater-nordmart-review-17
        image: "nexus-docker-openshift-stakater-nexus.apps.binero.06p407u4.kubeapp.cloud/repository/docker/stakater-nordmart-review:SNAPSHOT-PR-17-2c43b842"
        imagePullPolicy: IfNotPresent
        env:
          - name: DB_NAME
            value: nordmartDB
          - name: MONGO_HOST
            value: review-mongodb
          - name: JAEGER_ENDPOINT
            value: http://jaeger-collector.istio-system:14268/api/traces          
        livenessProbe:
          failureThreshold: 3
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
          initialDelaySeconds: 10
          httpGet:
            path: /health
            port: 8080
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
          initialDelaySeconds: 10
          httpGet:
            path: /health
            port: 8080
        resources:
          limits:
            memory: 1Gi
            cpu: 0.5
          requests:
            memory: 128Mi
            cpu: 0.1
      serviceAccountName: stakater-nordmart-review-17
---
# Source: helm/charts/mongodb/templates/standalone/dep-sts.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: review-mongodb
  namespace: nordmart-pr
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-10.0.5
    app.kubernetes.io/instance: stakater-nordmart-review
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: stakater-nordmart-review
      app.kubernetes.io/component: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        helm.sh/chart: mongodb-10.0.5
        app.kubernetes.io/instance: stakater-nordmart-review
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: mongodb
    spec:
      
      serviceAccountName: review-mongodb
      containers:
        - name: mongodb
          image: docker.io/bitnami/mongodb:4.4.2-debian-10-r0
          imagePullPolicy: "IfNotPresent"
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: datadir
              mountPath: /bitnami/mongodb
              subPath: 
      volumes:
        - name: datadir
          persistentVolumeClaim:
            claimName: review-mongodb
